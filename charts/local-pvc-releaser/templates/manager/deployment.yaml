apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.controller.name }}
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: local-pvc-releaser
    app.kubernetes.io/part-of: local-pvc-releaser
    app.kubernetes.io/managed-by: helm
    {{- with .Values.controller.additionalLabels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: {{ .Values.controller.replicas }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        {{- with .Values.controller.additionalAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        control-plane: controller-manager
    spec:
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
      containers:
        - command:
            - /manager
          args:
          {{- if gt .Values.controller.replicas 1.0}}
            - --leader-elect
          {{- end }}
          {{- if .Values.controller.dryRun }}
            - --dry-run
          {{- end }}
          {{- if .Values.controller.loggingDevMode }}
            - --dev-logging
          {{- end }}
          {{- if .Values.controller.pvcAnnotationSelector.enabled }}
            - --enable-pvc-selector
          {{- end }}
          {{- if hasKey .Values.controller.pvcAnnotationSelector "customAnnotationKey" }}
            - --pvc-annotation-custom-key={{.Values.controller.pvcAnnotationSelector.customAnnotationKey}}
          {{- end }}
          {{- if hasKey .Values.controller.pvcAnnotationSelector "customAnnotationValue" }}
            - --pvc-annotation-custom-value={{.Values.controller.pvcAnnotationSelector.customAnnotationValue}}
          {{- end}}
          image: "{{ .Values.controller.image.repository  }}:{{ .Values.controller.image.tag | default .Chart.AppVersion}}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          name: manager
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: LOG_LEVEL
              value: {{ .Values.controller.logLevel | default "info"}}
            {{- with .Values.controller.extraEnv }}
              {{- toYaml . | nindent 14 }}
            {{- end }}
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
