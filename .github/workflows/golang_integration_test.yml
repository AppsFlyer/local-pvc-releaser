name: Go Integration Test

on:
  push:
    branches-ignore:
     - main
     - master
  pull_request:
    branches:    
      - main
      - master
  release:

jobs:
  integration-test:
    name: integration-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version-file: './go.mod'

      # - name: Download envtest setup script
      #   run: curl -sSLo setup-envtest.sh https://raw.githubusercontent.com/kubernetes-sigs/controller-runtime/master/hack/setup-envtest.sh
        
      # - name: Make the script executable
      #   run: chmod +x setup-envtest.sh
          
      # - name: Setup envtest
      #   run: ./setup-envtest.sh   

      # - name: Install Controller-gen
      #   run: GO111MODULE=on go get sigs.k8s.io/controller-tools/cmd/controller-gen@v0.13.0

      # - name: Install Kustomize
      #   run: curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
      
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.8.0
        with:
          config: test/kind/config.yml
          cluster_name: test-cluster
          
      - name: run integration tests
        run: make integration-test
      - uses: actions/upload-artifact@v4
        with:
          name: integration_coverage_report
          path: integration-test-cover.out

  # coverage:
  #   name: Coverage report
  #   runs-on: ubuntu-latest
  #   needs: integration-test
  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: integration_coverage_report
  #     - uses: codecov/codecov-action@v3
  #       env:
  #         CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }} 
  #       with:
  #         files: integration-test-cover.out
  #         flags: integrationtests
  #         fail_ci_if_error: true